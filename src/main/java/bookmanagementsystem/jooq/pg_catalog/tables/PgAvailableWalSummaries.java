/*
 * This file is generated by jOOQ.
 */
package bookmanagementsystem.jooq.pg_catalog.tables;


import bookmanagementsystem.jooq.pg_catalog.PgCatalog;
import bookmanagementsystem.jooq.pg_catalog.tables.records.PgAvailableWalSummariesRecord;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.DefaultDataType;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgAvailableWalSummaries extends TableImpl<PgAvailableWalSummariesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>pg_catalog.pg_available_wal_summaries</code>
     */
    public static final PgAvailableWalSummaries PG_AVAILABLE_WAL_SUMMARIES = new PgAvailableWalSummaries();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PgAvailableWalSummariesRecord> getRecordType() {
        return PgAvailableWalSummariesRecord.class;
    }

    /**
     * The column <code>pg_catalog.pg_available_wal_summaries.tli</code>.
     */
    public final TableField<PgAvailableWalSummariesRecord, Long> TLI = createField(DSL.name("tli"), SQLDataType.BIGINT, this, "");

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public final TableField<PgAvailableWalSummariesRecord, Object> START_LSN = createField(DSL.name("start_lsn"), DefaultDataType.getDefaultDataType("\"pg_catalog\".\"pg_lsn\""), this, "");

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public final TableField<PgAvailableWalSummariesRecord, Object> END_LSN = createField(DSL.name("end_lsn"), DefaultDataType.getDefaultDataType("\"pg_catalog\".\"pg_lsn\""), this, "");

    private PgAvailableWalSummaries(Name alias, Table<PgAvailableWalSummariesRecord> aliased) {
        this(alias, aliased, new Field[] {
        });
    }

    private PgAvailableWalSummaries(Name alias, Table<PgAvailableWalSummariesRecord> aliased, Field<?>[] parameters) {
        this(alias, aliased, parameters, null);
    }

    private PgAvailableWalSummaries(Name alias, Table<PgAvailableWalSummariesRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function(), where);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_available_wal_summaries</code>
     * table reference
     */
    public PgAvailableWalSummaries(String alias) {
        this(DSL.name(alias), PG_AVAILABLE_WAL_SUMMARIES);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_available_wal_summaries</code>
     * table reference
     */
    public PgAvailableWalSummaries(Name alias) {
        this(alias, PG_AVAILABLE_WAL_SUMMARIES);
    }

    /**
     * Create a <code>pg_catalog.pg_available_wal_summaries</code> table
     * reference
     */
    public PgAvailableWalSummaries() {
        this(DSL.name("pg_available_wal_summaries"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : PgCatalog.PG_CATALOG;
    }

    @Override
    public PgAvailableWalSummaries as(String alias) {
        return new PgAvailableWalSummaries(DSL.name(alias), this, parameters);
    }

    @Override
    public PgAvailableWalSummaries as(Name alias) {
        return new PgAvailableWalSummaries(alias, this, parameters);
    }

    @Override
    public PgAvailableWalSummaries as(Table<?> alias) {
        return new PgAvailableWalSummaries(alias.getQualifiedName(), this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public PgAvailableWalSummaries rename(String name) {
        return new PgAvailableWalSummaries(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public PgAvailableWalSummaries rename(Name name) {
        return new PgAvailableWalSummaries(name, null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public PgAvailableWalSummaries rename(Table<?> name) {
        return new PgAvailableWalSummaries(name.getQualifiedName(), null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public PgAvailableWalSummaries call() {
        PgAvailableWalSummaries result = new PgAvailableWalSummaries(DSL.name("pg_available_wal_summaries"), null, new Field[] {});

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }
}
