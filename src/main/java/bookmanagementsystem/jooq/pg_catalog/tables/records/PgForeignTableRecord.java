/*
 * This file is generated by jOOQ.
 */
package bookmanagementsystem.jooq.pg_catalog.tables.records;


import bookmanagementsystem.jooq.pg_catalog.tables.PgForeignTable;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgForeignTableRecord extends UpdatableRecordImpl<PgForeignTableRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_foreign_table.ftrelid</code>.
     */
    public void setFtrelid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_foreign_table.ftrelid</code>.
     */
    public Long getFtrelid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_foreign_table.ftserver</code>.
     */
    public void setFtserver(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_foreign_table.ftserver</code>.
     */
    public Long getFtserver() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_foreign_table.ftoptions</code>.
     */
    public void setFtoptions(String[] value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_foreign_table.ftoptions</code>.
     */
    public String[] getFtoptions() {
        return (String[]) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgForeignTableRecord
     */
    public PgForeignTableRecord() {
        super(PgForeignTable.PG_FOREIGN_TABLE);
    }

    /**
     * Create a detached, initialised PgForeignTableRecord
     */
    public PgForeignTableRecord(Long ftrelid, Long ftserver, String[] ftoptions) {
        super(PgForeignTable.PG_FOREIGN_TABLE);

        setFtrelid(ftrelid);
        setFtserver(ftserver);
        setFtoptions(ftoptions);
        resetChangedOnNotNull();
    }
}
