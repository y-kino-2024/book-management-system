/*
 * This file is generated by jOOQ.
 */
package bookmanagementsystem.jooq.pg_catalog.tables.records;


import bookmanagementsystem.jooq.pg_catalog.tables.PgLargeobject;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgLargeobjectRecord extends UpdatableRecordImpl<PgLargeobjectRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_largeobject.loid</code>.
     */
    public void setLoid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_largeobject.loid</code>.
     */
    public Long getLoid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_largeobject.pageno</code>.
     */
    public void setPageno(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_largeobject.pageno</code>.
     */
    public Integer getPageno() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_largeobject.data</code>.
     */
    public void setData(byte[] value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_largeobject.data</code>.
     */
    public byte[] getData() {
        return (byte[]) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgLargeobjectRecord
     */
    public PgLargeobjectRecord() {
        super(PgLargeobject.PG_LARGEOBJECT);
    }

    /**
     * Create a detached, initialised PgLargeobjectRecord
     */
    public PgLargeobjectRecord(Long loid, Integer pageno, byte[] data) {
        super(PgLargeobject.PG_LARGEOBJECT);

        setLoid(loid);
        setPageno(pageno);
        setData(data);
        resetChangedOnNotNull();
    }
}
