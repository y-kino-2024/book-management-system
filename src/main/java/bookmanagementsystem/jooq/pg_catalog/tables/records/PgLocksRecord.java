/*
 * This file is generated by jOOQ.
 */
package bookmanagementsystem.jooq.pg_catalog.tables.records;


import bookmanagementsystem.jooq.pg_catalog.tables.PgLocks;

import java.time.OffsetDateTime;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgLocksRecord extends TableRecordImpl<PgLocksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_locks.locktype</code>.
     */
    public void setLocktype(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.locktype</code>.
     */
    public String getLocktype() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_locks.database</code>.
     */
    public void setDatabase(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.database</code>.
     */
    public Long getDatabase() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_locks.relation</code>.
     */
    public void setRelation(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.relation</code>.
     */
    public Long getRelation() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_locks.page</code>.
     */
    public void setPage(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.page</code>.
     */
    public Integer getPage() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_locks.tuple</code>.
     */
    public void setTuple(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.tuple</code>.
     */
    public Short getTuple() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_locks.virtualxid</code>.
     */
    public void setVirtualxid(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.virtualxid</code>.
     */
    public String getVirtualxid() {
        return (String) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_locks.transactionid</code>.
     */
    public void setTransactionid(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.transactionid</code>.
     */
    public Long getTransactionid() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_locks.classid</code>.
     */
    public void setClassid(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.classid</code>.
     */
    public Long getClassid() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_locks.objid</code>.
     */
    public void setObjid(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.objid</code>.
     */
    public Long getObjid() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>pg_catalog.pg_locks.objsubid</code>.
     */
    public void setObjsubid(Short value) {
        set(9, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.objsubid</code>.
     */
    public Short getObjsubid() {
        return (Short) get(9);
    }

    /**
     * Setter for <code>pg_catalog.pg_locks.virtualtransaction</code>.
     */
    public void setVirtualtransaction(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.virtualtransaction</code>.
     */
    public String getVirtualtransaction() {
        return (String) get(10);
    }

    /**
     * Setter for <code>pg_catalog.pg_locks.pid</code>.
     */
    public void setPid(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.pid</code>.
     */
    public Integer getPid() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>pg_catalog.pg_locks.mode</code>.
     */
    public void setMode(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.mode</code>.
     */
    public String getMode() {
        return (String) get(12);
    }

    /**
     * Setter for <code>pg_catalog.pg_locks.granted</code>.
     */
    public void setGranted(Boolean value) {
        set(13, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.granted</code>.
     */
    public Boolean getGranted() {
        return (Boolean) get(13);
    }

    /**
     * Setter for <code>pg_catalog.pg_locks.fastpath</code>.
     */
    public void setFastpath(Boolean value) {
        set(14, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.fastpath</code>.
     */
    public Boolean getFastpath() {
        return (Boolean) get(14);
    }

    /**
     * Setter for <code>pg_catalog.pg_locks.waitstart</code>.
     */
    public void setWaitstart(OffsetDateTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_locks.waitstart</code>.
     */
    public OffsetDateTime getWaitstart() {
        return (OffsetDateTime) get(15);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgLocksRecord
     */
    public PgLocksRecord() {
        super(PgLocks.PG_LOCKS);
    }

    /**
     * Create a detached, initialised PgLocksRecord
     */
    public PgLocksRecord(String locktype, Long database, Long relation, Integer page, Short tuple, String virtualxid, Long transactionid, Long classid, Long objid, Short objsubid, String virtualtransaction, Integer pid, String mode, Boolean granted, Boolean fastpath, OffsetDateTime waitstart) {
        super(PgLocks.PG_LOCKS);

        setLocktype(locktype);
        setDatabase(database);
        setRelation(relation);
        setPage(page);
        setTuple(tuple);
        setVirtualxid(virtualxid);
        setTransactionid(transactionid);
        setClassid(classid);
        setObjid(objid);
        setObjsubid(objsubid);
        setVirtualtransaction(virtualtransaction);
        setPid(pid);
        setMode(mode);
        setGranted(granted);
        setFastpath(fastpath);
        setWaitstart(waitstart);
        resetChangedOnNotNull();
    }
}
