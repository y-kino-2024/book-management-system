/*
 * This file is generated by jOOQ.
 */
package bookmanagementsystem.jooq.pg_catalog.tables.records;


import bookmanagementsystem.jooq.pg_catalog.tables.PgTrigger;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgTriggerRecord extends UpdatableRecordImpl<PgTriggerRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_trigger.oid</code>.
     */
    public void setOid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.oid</code>.
     */
    public Long getOid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgrelid</code>.
     */
    public void setTgrelid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgrelid</code>.
     */
    public Long getTgrelid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgparentid</code>.
     */
    public void setTgparentid(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgparentid</code>.
     */
    public Long getTgparentid() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgname</code>.
     */
    public void setTgname(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgname</code>.
     */
    public String getTgname() {
        return (String) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgfoid</code>.
     */
    public void setTgfoid(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgfoid</code>.
     */
    public Long getTgfoid() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgtype</code>.
     */
    public void setTgtype(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgtype</code>.
     */
    public Short getTgtype() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgenabled</code>.
     */
    public void setTgenabled(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgenabled</code>.
     */
    public String getTgenabled() {
        return (String) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgisinternal</code>.
     */
    public void setTgisinternal(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgisinternal</code>.
     */
    public Boolean getTgisinternal() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgconstrrelid</code>.
     */
    public void setTgconstrrelid(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgconstrrelid</code>.
     */
    public Long getTgconstrrelid() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgconstrindid</code>.
     */
    public void setTgconstrindid(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgconstrindid</code>.
     */
    public Long getTgconstrindid() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgconstraint</code>.
     */
    public void setTgconstraint(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgconstraint</code>.
     */
    public Long getTgconstraint() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgdeferrable</code>.
     */
    public void setTgdeferrable(Boolean value) {
        set(11, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgdeferrable</code>.
     */
    public Boolean getTgdeferrable() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tginitdeferred</code>.
     */
    public void setTginitdeferred(Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tginitdeferred</code>.
     */
    public Boolean getTginitdeferred() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgnargs</code>.
     */
    public void setTgnargs(Short value) {
        set(13, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgnargs</code>.
     */
    public Short getTgnargs() {
        return (Short) get(13);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgattr</code>.
     */
    public void setTgattr(Object[] value) {
        set(14, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgattr</code>.
     */
    public Object[] getTgattr() {
        return (Object[]) get(14);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgargs</code>.
     */
    public void setTgargs(byte[] value) {
        set(15, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgargs</code>.
     */
    public byte[] getTgargs() {
        return (byte[]) get(15);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setTgqual(Object value) {
        set(16, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getTgqual() {
        return get(16);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgoldtable</code>.
     */
    public void setTgoldtable(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgoldtable</code>.
     */
    public String getTgoldtable() {
        return (String) get(17);
    }

    /**
     * Setter for <code>pg_catalog.pg_trigger.tgnewtable</code>.
     */
    public void setTgnewtable(String value) {
        set(18, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_trigger.tgnewtable</code>.
     */
    public String getTgnewtable() {
        return (String) get(18);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgTriggerRecord
     */
    public PgTriggerRecord() {
        super(PgTrigger.PG_TRIGGER);
    }

    /**
     * Create a detached, initialised PgTriggerRecord
     */
    public PgTriggerRecord(Long oid, Long tgrelid, Long tgparentid, String tgname, Long tgfoid, Short tgtype, String tgenabled, Boolean tgisinternal, Long tgconstrrelid, Long tgconstrindid, Long tgconstraint, Boolean tgdeferrable, Boolean tginitdeferred, Short tgnargs, Object[] tgattr, byte[] tgargs, Object tgqual, String tgoldtable, String tgnewtable) {
        super(PgTrigger.PG_TRIGGER);

        setOid(oid);
        setTgrelid(tgrelid);
        setTgparentid(tgparentid);
        setTgname(tgname);
        setTgfoid(tgfoid);
        setTgtype(tgtype);
        setTgenabled(tgenabled);
        setTgisinternal(tgisinternal);
        setTgconstrrelid(tgconstrrelid);
        setTgconstrindid(tgconstrindid);
        setTgconstraint(tgconstraint);
        setTgdeferrable(tgdeferrable);
        setTginitdeferred(tginitdeferred);
        setTgnargs(tgnargs);
        setTgattr(tgattr);
        setTgargs(tgargs);
        setTgqual(tgqual);
        setTgoldtable(tgoldtable);
        setTgnewtable(tgnewtable);
        resetChangedOnNotNull();
    }
}
