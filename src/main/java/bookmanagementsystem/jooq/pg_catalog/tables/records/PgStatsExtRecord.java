/*
 * This file is generated by jOOQ.
 */
package bookmanagementsystem.jooq.pg_catalog.tables.records;


import bookmanagementsystem.jooq.pg_catalog.tables.PgStatsExt;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatsExtRecord extends TableRecordImpl<PgStatsExtRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_stats_ext.schemaname</code>.
     */
    public void setSchemaname(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats_ext.schemaname</code>.
     */
    public String getSchemaname() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats_ext.tablename</code>.
     */
    public void setTablename(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats_ext.tablename</code>.
     */
    public String getTablename() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats_ext.statistics_schemaname</code>.
     */
    public void setStatisticsSchemaname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats_ext.statistics_schemaname</code>.
     */
    public String getStatisticsSchemaname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats_ext.statistics_name</code>.
     */
    public void setStatisticsName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats_ext.statistics_name</code>.
     */
    public String getStatisticsName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats_ext.statistics_owner</code>.
     */
    public void setStatisticsOwner(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats_ext.statistics_owner</code>.
     */
    public String getStatisticsOwner() {
        return (String) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats_ext.attnames</code>.
     */
    public void setAttnames(String[] value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats_ext.attnames</code>.
     */
    public String[] getAttnames() {
        return (String[]) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats_ext.exprs</code>.
     */
    public void setExprs(String[] value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats_ext.exprs</code>.
     */
    public String[] getExprs() {
        return (String[]) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats_ext.kinds</code>.
     */
    public void setKinds(String[] value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats_ext.kinds</code>.
     */
    public String[] getKinds() {
        return (String[]) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats_ext.inherited</code>.
     */
    public void setInherited(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats_ext.inherited</code>.
     */
    public Boolean getInherited() {
        return (Boolean) get(8);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setNDistinct(Object value) {
        set(9, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getNDistinct() {
        return get(9);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setDependencies(Object value) {
        set(10, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getDependencies() {
        return get(10);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats_ext.most_common_vals</code>.
     */
    public void setMostCommonVals(String[] value) {
        set(11, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats_ext.most_common_vals</code>.
     */
    public String[] getMostCommonVals() {
        return (String[]) get(11);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats_ext.most_common_val_nulls</code>.
     */
    public void setMostCommonValNulls(Boolean[] value) {
        set(12, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats_ext.most_common_val_nulls</code>.
     */
    public Boolean[] getMostCommonValNulls() {
        return (Boolean[]) get(12);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats_ext.most_common_freqs</code>.
     */
    public void setMostCommonFreqs(Double[] value) {
        set(13, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats_ext.most_common_freqs</code>.
     */
    public Double[] getMostCommonFreqs() {
        return (Double[]) get(13);
    }

    /**
     * Setter for <code>pg_catalog.pg_stats_ext.most_common_base_freqs</code>.
     */
    public void setMostCommonBaseFreqs(Double[] value) {
        set(14, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stats_ext.most_common_base_freqs</code>.
     */
    public Double[] getMostCommonBaseFreqs() {
        return (Double[]) get(14);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgStatsExtRecord
     */
    public PgStatsExtRecord() {
        super(PgStatsExt.PG_STATS_EXT);
    }

    /**
     * Create a detached, initialised PgStatsExtRecord
     */
    public PgStatsExtRecord(String schemaname, String tablename, String statisticsSchemaname, String statisticsName, String statisticsOwner, String[] attnames, String[] exprs, String[] kinds, Boolean inherited, Object nDistinct, Object dependencies, String[] mostCommonVals, Boolean[] mostCommonValNulls, Double[] mostCommonFreqs, Double[] mostCommonBaseFreqs) {
        super(PgStatsExt.PG_STATS_EXT);

        setSchemaname(schemaname);
        setTablename(tablename);
        setStatisticsSchemaname(statisticsSchemaname);
        setStatisticsName(statisticsName);
        setStatisticsOwner(statisticsOwner);
        setAttnames(attnames);
        setExprs(exprs);
        setKinds(kinds);
        setInherited(inherited);
        setNDistinct(nDistinct);
        setDependencies(dependencies);
        setMostCommonVals(mostCommonVals);
        setMostCommonValNulls(mostCommonValNulls);
        setMostCommonFreqs(mostCommonFreqs);
        setMostCommonBaseFreqs(mostCommonBaseFreqs);
        resetChangedOnNotNull();
    }
}
