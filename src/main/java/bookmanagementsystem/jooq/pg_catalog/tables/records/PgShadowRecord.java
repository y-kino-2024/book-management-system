/*
 * This file is generated by jOOQ.
 */
package bookmanagementsystem.jooq.pg_catalog.tables.records;


import bookmanagementsystem.jooq.pg_catalog.tables.PgShadow;

import java.time.OffsetDateTime;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgShadowRecord extends TableRecordImpl<PgShadowRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_shadow.usename</code>.
     */
    public void setUsename(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_shadow.usename</code>.
     */
    public String getUsename() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_shadow.usesysid</code>.
     */
    public void setUsesysid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_shadow.usesysid</code>.
     */
    public Long getUsesysid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_shadow.usecreatedb</code>.
     */
    public void setUsecreatedb(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_shadow.usecreatedb</code>.
     */
    public Boolean getUsecreatedb() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_shadow.usesuper</code>.
     */
    public void setUsesuper(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_shadow.usesuper</code>.
     */
    public Boolean getUsesuper() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_shadow.userepl</code>.
     */
    public void setUserepl(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_shadow.userepl</code>.
     */
    public Boolean getUserepl() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_shadow.usebypassrls</code>.
     */
    public void setUsebypassrls(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_shadow.usebypassrls</code>.
     */
    public Boolean getUsebypassrls() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_shadow.passwd</code>.
     */
    public void setPasswd(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_shadow.passwd</code>.
     */
    public String getPasswd() {
        return (String) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_shadow.valuntil</code>.
     */
    public void setValuntil(OffsetDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_shadow.valuntil</code>.
     */
    public OffsetDateTime getValuntil() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_shadow.useconfig</code>.
     */
    public void setUseconfig(String[] value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_shadow.useconfig</code>.
     */
    public String[] getUseconfig() {
        return (String[]) get(8);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgShadowRecord
     */
    public PgShadowRecord() {
        super(PgShadow.PG_SHADOW);
    }

    /**
     * Create a detached, initialised PgShadowRecord
     */
    public PgShadowRecord(String usename, Long usesysid, Boolean usecreatedb, Boolean usesuper, Boolean userepl, Boolean usebypassrls, String passwd, OffsetDateTime valuntil, String[] useconfig) {
        super(PgShadow.PG_SHADOW);

        setUsename(usename);
        setUsesysid(usesysid);
        setUsecreatedb(usecreatedb);
        setUsesuper(usesuper);
        setUserepl(userepl);
        setUsebypassrls(usebypassrls);
        setPasswd(passwd);
        setValuntil(valuntil);
        setUseconfig(useconfig);
        resetChangedOnNotNull();
    }
}
