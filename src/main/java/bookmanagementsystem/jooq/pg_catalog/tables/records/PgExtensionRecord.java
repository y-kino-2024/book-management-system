/*
 * This file is generated by jOOQ.
 */
package bookmanagementsystem.jooq.pg_catalog.tables.records;


import bookmanagementsystem.jooq.pg_catalog.tables.PgExtension;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class PgExtensionRecord extends UpdatableRecordImpl<PgExtensionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached PgExtensionRecord
     */
    public PgExtensionRecord() {
        super(PgExtension.PG_EXTENSION);
    }

    /**
     * Create a detached, initialised PgExtensionRecord
     */
    public PgExtensionRecord(Long oid, String extname, Long extowner, Long extnamespace, Boolean extrelocatable, String extversion, Long[] extconfig, String[] extcondition) {
        super(PgExtension.PG_EXTENSION);

        setOid(oid);
        setExtname(extname);
        setExtowner(extowner);
        setExtnamespace(extnamespace);
        setExtrelocatable(extrelocatable);
        setExtversion(extversion);
        setExtconfig(extconfig);
        setExtcondition(extcondition);
        resetChangedOnNotNull();
    }

    /**
     * Getter for <code>pg_catalog.pg_extension.oid</code>.
     */
    public Long getOid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_extension.oid</code>.
     */
    public void setOid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_extension.extname</code>.
     */
    public String getExtname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_extension.extname</code>.
     */
    public void setExtname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_extension.extowner</code>.
     */
    public Long getExtowner() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_extension.extowner</code>.
     */
    public void setExtowner(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_extension.extnamespace</code>.
     */
    public Long getExtnamespace() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_extension.extnamespace</code>.
     */
    public void setExtnamespace(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_extension.extrelocatable</code>.
     */
    public Boolean getExtrelocatable() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_extension.extrelocatable</code>.
     */
    public void setExtrelocatable(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_extension.extversion</code>.
     */
    public String getExtversion() {
        return (String) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_extension.extversion</code>.
     */
    public void setExtversion(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_extension.extconfig</code>.
     */
    public Long[] getExtconfig() {
        return (Long[]) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_extension.extconfig</code>.
     */
    public void setExtconfig(Long[] value) {
        set(6, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>pg_catalog.pg_extension.extcondition</code>.
     */
    public String[] getExtcondition() {
        return (String[]) get(7);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>pg_catalog.pg_extension.extcondition</code>.
     */
    public void setExtcondition(String[] value) {
        set(7, value);
    }

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }
}
