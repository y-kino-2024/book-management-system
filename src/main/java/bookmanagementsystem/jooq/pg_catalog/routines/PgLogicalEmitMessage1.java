/*
 * This file is generated by jOOQ.
 */
package bookmanagementsystem.jooq.pg_catalog.routines;


import bookmanagementsystem.jooq.pg_catalog.PgCatalog;
import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.*;


/**
 * @deprecated Unknown data type. If this is a qualified, user-defined type, it
 * may have been excluded from code generation. If this is a built-in type, you
 * can define an explicit {@link org.jooq.Binding} to specify how this type
 * should be handled. Deprecation can be turned off using {@literal
 * <deprecationOnUnknownTypes/>} in your code generator configuration.
 */
@Deprecated
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class PgLogicalEmitMessage1 extends AbstractRoutine<Object> {

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static final Parameter<Object> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", DefaultDataType.getDefaultDataType("\"pg_catalog\".\"pg_lsn\""), false, false);
    /**
     * The parameter
     * <code>pg_catalog.pg_logical_emit_message.transactional</code>.
     */
    public static final Parameter<Boolean> TRANSACTIONAL = Internal.createParameter("transactional", SQLDataType.BOOLEAN, false, false);
    /**
     * The parameter <code>pg_catalog.pg_logical_emit_message.prefix</code>.
     */
    public static final Parameter<String> PREFIX = Internal.createParameter("prefix", SQLDataType.CLOB, false, false);
    /**
     * The parameter <code>pg_catalog.pg_logical_emit_message.message</code>.
     */
    public static final Parameter<String> MESSAGE = Internal.createParameter("message", SQLDataType.CLOB, false, false);
    /**
     * The parameter <code>pg_catalog.pg_logical_emit_message.flush</code>.
     */
    public static final Parameter<Boolean> FLUSH = Internal.createParameter("flush", SQLDataType.BOOLEAN.defaultValue(DSL.field(DSL.raw("false"), SQLDataType.BOOLEAN)), true, false);
    private static final long serialVersionUID = 1L;

    /**
     * Create a new routine call instance
     */
    public PgLogicalEmitMessage1() {
        super("pg_logical_emit_message", PgCatalog.PG_CATALOG, DefaultDataType.getDefaultDataType("\"pg_catalog\".\"pg_lsn\""));

        setReturnParameter(RETURN_VALUE);
        addInParameter(TRANSACTIONAL);
        addInParameter(PREFIX);
        addInParameter(MESSAGE);
        addInParameter(FLUSH);
        setOverloaded(true);
    }

    /**
     * Set the <code>transactional</code> parameter IN value to the routine
     */
    public void setTransactional(Boolean value) {
        setValue(TRANSACTIONAL, value);
    }

    /**
     * Set the <code>transactional</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    public void setTransactional(Field<Boolean> field) {
        setField(TRANSACTIONAL, field);
    }

    /**
     * Set the <code>prefix</code> parameter IN value to the routine
     */
    public void setPrefix(String value) {
        setValue(PREFIX, value);
    }

    /**
     * Set the <code>prefix</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setPrefix(Field<String> field) {
        setField(PREFIX, field);
    }

    /**
     * Set the <code>message</code> parameter IN value to the routine
     */
    public void setMessage(String value) {
        setValue(MESSAGE, value);
    }

    /**
     * Set the <code>message</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setMessage(Field<String> field) {
        setField(MESSAGE, field);
    }

    /**
     * Set the <code>flush</code> parameter IN value to the routine
     */
    public void setFlush(Boolean value) {
        setValue(FLUSH, value);
    }

    /**
     * Set the <code>flush</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setFlush(Field<Boolean> field) {
        setField(FLUSH, field);
    }
}
