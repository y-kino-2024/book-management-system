/*
 * This file is generated by jOOQ.
 */
package bookmanagementsystem.jooq.information_schema.tables.records;


import bookmanagementsystem.jooq.information_schema.tables.TriggeredUpdateColumns;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TriggeredUpdateColumnsRecord extends TableRecordImpl<TriggeredUpdateColumnsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>information_schema.triggered_update_columns.trigger_catalog</code>.
     */
    public void setTriggerCatalog(String value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>information_schema.triggered_update_columns.trigger_catalog</code>.
     */
    public String getTriggerCatalog() {
        return (String) get(0);
    }

    /**
     * Setter for
     * <code>information_schema.triggered_update_columns.trigger_schema</code>.
     */
    public void setTriggerSchema(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>information_schema.triggered_update_columns.trigger_schema</code>.
     */
    public String getTriggerSchema() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>information_schema.triggered_update_columns.trigger_name</code>.
     */
    public void setTriggerName(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>information_schema.triggered_update_columns.trigger_name</code>.
     */
    public String getTriggerName() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>information_schema.triggered_update_columns.event_object_catalog</code>.
     */
    public void setEventObjectCatalog(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>information_schema.triggered_update_columns.event_object_catalog</code>.
     */
    public String getEventObjectCatalog() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>information_schema.triggered_update_columns.event_object_schema</code>.
     */
    public void setEventObjectSchema(String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>information_schema.triggered_update_columns.event_object_schema</code>.
     */
    public String getEventObjectSchema() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>information_schema.triggered_update_columns.event_object_table</code>.
     */
    public void setEventObjectTable(String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>information_schema.triggered_update_columns.event_object_table</code>.
     */
    public String getEventObjectTable() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>information_schema.triggered_update_columns.event_object_column</code>.
     */
    public void setEventObjectColumn(String value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>information_schema.triggered_update_columns.event_object_column</code>.
     */
    public String getEventObjectColumn() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TriggeredUpdateColumnsRecord
     */
    public TriggeredUpdateColumnsRecord() {
        super(TriggeredUpdateColumns.TRIGGERED_UPDATE_COLUMNS);
    }

    /**
     * Create a detached, initialised TriggeredUpdateColumnsRecord
     */
    public TriggeredUpdateColumnsRecord(String triggerCatalog, String triggerSchema, String triggerName, String eventObjectCatalog, String eventObjectSchema, String eventObjectTable, String eventObjectColumn) {
        super(TriggeredUpdateColumns.TRIGGERED_UPDATE_COLUMNS);

        setTriggerCatalog(triggerCatalog);
        setTriggerSchema(triggerSchema);
        setTriggerName(triggerName);
        setEventObjectCatalog(eventObjectCatalog);
        setEventObjectSchema(eventObjectSchema);
        setEventObjectTable(eventObjectTable);
        setEventObjectColumn(eventObjectColumn);
        resetChangedOnNotNull();
    }
}
