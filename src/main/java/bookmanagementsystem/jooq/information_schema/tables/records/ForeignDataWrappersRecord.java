/*
 * This file is generated by jOOQ.
 */
package bookmanagementsystem.jooq.information_schema.tables.records;


import bookmanagementsystem.jooq.information_schema.tables.ForeignDataWrappers;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ForeignDataWrappersRecord extends TableRecordImpl<ForeignDataWrappersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>information_schema.foreign_data_wrappers.foreign_data_wrapper_catalog</code>.
     */
    public void setForeignDataWrapperCatalog(String value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>information_schema.foreign_data_wrappers.foreign_data_wrapper_catalog</code>.
     */
    public String getForeignDataWrapperCatalog() {
        return (String) get(0);
    }

    /**
     * Setter for
     * <code>information_schema.foreign_data_wrappers.foreign_data_wrapper_name</code>.
     */
    public void setForeignDataWrapperName(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>information_schema.foreign_data_wrappers.foreign_data_wrapper_name</code>.
     */
    public String getForeignDataWrapperName() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>information_schema.foreign_data_wrappers.authorization_identifier</code>.
     */
    public void setAuthorizationIdentifier(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>information_schema.foreign_data_wrappers.authorization_identifier</code>.
     */
    public String getAuthorizationIdentifier() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>information_schema.foreign_data_wrappers.library_name</code>.
     */
    public void setLibraryName(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>information_schema.foreign_data_wrappers.library_name</code>.
     */
    public String getLibraryName() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>information_schema.foreign_data_wrappers.foreign_data_wrapper_language</code>.
     */
    public void setForeignDataWrapperLanguage(String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>information_schema.foreign_data_wrappers.foreign_data_wrapper_language</code>.
     */
    public String getForeignDataWrapperLanguage() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ForeignDataWrappersRecord
     */
    public ForeignDataWrappersRecord() {
        super(ForeignDataWrappers.FOREIGN_DATA_WRAPPERS);
    }

    /**
     * Create a detached, initialised ForeignDataWrappersRecord
     */
    public ForeignDataWrappersRecord(String foreignDataWrapperCatalog, String foreignDataWrapperName, String authorizationIdentifier, String libraryName, String foreignDataWrapperLanguage) {
        super(ForeignDataWrappers.FOREIGN_DATA_WRAPPERS);

        setForeignDataWrapperCatalog(foreignDataWrapperCatalog);
        setForeignDataWrapperName(foreignDataWrapperName);
        setAuthorizationIdentifier(authorizationIdentifier);
        setLibraryName(libraryName);
        setForeignDataWrapperLanguage(foreignDataWrapperLanguage);
        resetChangedOnNotNull();
    }
}
