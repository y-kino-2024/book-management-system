/*
 * This file is generated by jOOQ.
 */
package quoassignment.jooq.information_schema.tables.records;


import org.jooq.impl.TableRecordImpl;

import quoassignment.jooq.information_schema.tables.AdministrableRoleAuthorizations;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AdministrableRoleAuthorizationsRecord extends TableRecordImpl<AdministrableRoleAuthorizationsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>information_schema.administrable_role_authorizations.grantee</code>.
     */
    public void setGrantee(String value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>information_schema.administrable_role_authorizations.grantee</code>.
     */
    public String getGrantee() {
        return (String) get(0);
    }

    /**
     * Setter for
     * <code>information_schema.administrable_role_authorizations.role_name</code>.
     */
    public void setRoleName(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>information_schema.administrable_role_authorizations.role_name</code>.
     */
    public String getRoleName() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>information_schema.administrable_role_authorizations.is_grantable</code>.
     */
    public void setIsGrantable(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>information_schema.administrable_role_authorizations.is_grantable</code>.
     */
    public String getIsGrantable() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdministrableRoleAuthorizationsRecord
     */
    public AdministrableRoleAuthorizationsRecord() {
        super(AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS);
    }

    /**
     * Create a detached, initialised AdministrableRoleAuthorizationsRecord
     */
    public AdministrableRoleAuthorizationsRecord(String grantee, String roleName, String isGrantable) {
        super(AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS);

        setGrantee(grantee);
        setRoleName(roleName);
        setIsGrantable(isGrantable);
        resetChangedOnNotNull();
    }
}
