/*
 * This file is generated by jOOQ.
 */
package quoassignment.jooq.pg_catalog.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import quoassignment.jooq.pg_catalog.tables.PgSequence;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgSequenceRecord extends UpdatableRecordImpl<PgSequenceRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_sequence.seqrelid</code>.
     */
    public void setSeqrelid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_sequence.seqrelid</code>.
     */
    public Long getSeqrelid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_sequence.seqtypid</code>.
     */
    public void setSeqtypid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_sequence.seqtypid</code>.
     */
    public Long getSeqtypid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_sequence.seqstart</code>.
     */
    public void setSeqstart(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_sequence.seqstart</code>.
     */
    public Long getSeqstart() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_sequence.seqincrement</code>.
     */
    public void setSeqincrement(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_sequence.seqincrement</code>.
     */
    public Long getSeqincrement() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_sequence.seqmax</code>.
     */
    public void setSeqmax(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_sequence.seqmax</code>.
     */
    public Long getSeqmax() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_sequence.seqmin</code>.
     */
    public void setSeqmin(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_sequence.seqmin</code>.
     */
    public Long getSeqmin() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_sequence.seqcache</code>.
     */
    public void setSeqcache(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_sequence.seqcache</code>.
     */
    public Long getSeqcache() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_sequence.seqcycle</code>.
     */
    public void setSeqcycle(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_sequence.seqcycle</code>.
     */
    public Boolean getSeqcycle() {
        return (Boolean) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgSequenceRecord
     */
    public PgSequenceRecord() {
        super(PgSequence.PG_SEQUENCE);
    }

    /**
     * Create a detached, initialised PgSequenceRecord
     */
    public PgSequenceRecord(Long seqrelid, Long seqtypid, Long seqstart, Long seqincrement, Long seqmax, Long seqmin, Long seqcache, Boolean seqcycle) {
        super(PgSequence.PG_SEQUENCE);

        setSeqrelid(seqrelid);
        setSeqtypid(seqtypid);
        setSeqstart(seqstart);
        setSeqincrement(seqincrement);
        setSeqmax(seqmax);
        setSeqmin(seqmin);
        setSeqcache(seqcache);
        setSeqcycle(seqcycle);
        resetChangedOnNotNull();
    }
}
