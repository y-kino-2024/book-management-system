/*
 * This file is generated by jOOQ.
 */
package quoassignment.jooq.pg_catalog.tables.records;


import java.time.OffsetDateTime;

import org.jooq.impl.TableRecordImpl;

import quoassignment.jooq.pg_catalog.tables.PgStatIo;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatIoRecord extends TableRecordImpl<PgStatIoRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_stat_io.backend_type</code>.
     */
    public void setBackendType(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.backend_type</code>.
     */
    public String getBackendType() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.object</code>.
     */
    public void setObject(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.object</code>.
     */
    public String getObject() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.context</code>.
     */
    public void setContext(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.context</code>.
     */
    public String getContext() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.reads</code>.
     */
    public void setReads(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.reads</code>.
     */
    public Long getReads() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.read_time</code>.
     */
    public void setReadTime(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.read_time</code>.
     */
    public Double getReadTime() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.writes</code>.
     */
    public void setWrites(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.writes</code>.
     */
    public Long getWrites() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.write_time</code>.
     */
    public void setWriteTime(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.write_time</code>.
     */
    public Double getWriteTime() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.writebacks</code>.
     */
    public void setWritebacks(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.writebacks</code>.
     */
    public Long getWritebacks() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.writeback_time</code>.
     */
    public void setWritebackTime(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.writeback_time</code>.
     */
    public Double getWritebackTime() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.extends</code>.
     */
    public void setExtends(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.extends</code>.
     */
    public Long getExtends() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.extend_time</code>.
     */
    public void setExtendTime(Double value) {
        set(10, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.extend_time</code>.
     */
    public Double getExtendTime() {
        return (Double) get(10);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.op_bytes</code>.
     */
    public void setOpBytes(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.op_bytes</code>.
     */
    public Long getOpBytes() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.hits</code>.
     */
    public void setHits(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.hits</code>.
     */
    public Long getHits() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.evictions</code>.
     */
    public void setEvictions(Long value) {
        set(13, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.evictions</code>.
     */
    public Long getEvictions() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.reuses</code>.
     */
    public void setReuses(Long value) {
        set(14, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.reuses</code>.
     */
    public Long getReuses() {
        return (Long) get(14);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.fsyncs</code>.
     */
    public void setFsyncs(Long value) {
        set(15, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.fsyncs</code>.
     */
    public Long getFsyncs() {
        return (Long) get(15);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.fsync_time</code>.
     */
    public void setFsyncTime(Double value) {
        set(16, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.fsync_time</code>.
     */
    public Double getFsyncTime() {
        return (Double) get(16);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_io.stats_reset</code>.
     */
    public void setStatsReset(OffsetDateTime value) {
        set(17, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_io.stats_reset</code>.
     */
    public OffsetDateTime getStatsReset() {
        return (OffsetDateTime) get(17);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgStatIoRecord
     */
    public PgStatIoRecord() {
        super(PgStatIo.PG_STAT_IO);
    }

    /**
     * Create a detached, initialised PgStatIoRecord
     */
    public PgStatIoRecord(String backendType, String object, String context, Long reads, Double readTime, Long writes, Double writeTime, Long writebacks, Double writebackTime, Long extends_, Double extendTime, Long opBytes, Long hits, Long evictions, Long reuses, Long fsyncs, Double fsyncTime, OffsetDateTime statsReset) {
        super(PgStatIo.PG_STAT_IO);

        setBackendType(backendType);
        setObject(object);
        setContext(context);
        setReads(reads);
        setReadTime(readTime);
        setWrites(writes);
        setWriteTime(writeTime);
        setWritebacks(writebacks);
        setWritebackTime(writebackTime);
        setExtends(extends_);
        setExtendTime(extendTime);
        setOpBytes(opBytes);
        setHits(hits);
        setEvictions(evictions);
        setReuses(reuses);
        setFsyncs(fsyncs);
        setFsyncTime(fsyncTime);
        setStatsReset(statsReset);
        resetChangedOnNotNull();
    }
}
