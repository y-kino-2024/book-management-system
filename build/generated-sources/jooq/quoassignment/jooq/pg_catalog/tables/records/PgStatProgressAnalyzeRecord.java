/*
 * This file is generated by jOOQ.
 */
package quoassignment.jooq.pg_catalog.tables.records;


import org.jooq.impl.TableRecordImpl;

import quoassignment.jooq.pg_catalog.tables.PgStatProgressAnalyze;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatProgressAnalyzeRecord extends TableRecordImpl<PgStatProgressAnalyzeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_stat_progress_analyze.pid</code>.
     */
    public void setPid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_progress_analyze.pid</code>.
     */
    public Integer getPid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_progress_analyze.datid</code>.
     */
    public void setDatid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_progress_analyze.datid</code>.
     */
    public Long getDatid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_progress_analyze.datname</code>.
     */
    public void setDatname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_progress_analyze.datname</code>.
     */
    public String getDatname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_progress_analyze.relid</code>.
     */
    public void setRelid(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_progress_analyze.relid</code>.
     */
    public Long getRelid() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_progress_analyze.phase</code>.
     */
    public void setPhase(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_progress_analyze.phase</code>.
     */
    public String getPhase() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_analyze.sample_blks_total</code>.
     */
    public void setSampleBlksTotal(Long value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_analyze.sample_blks_total</code>.
     */
    public Long getSampleBlksTotal() {
        return (Long) get(5);
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_analyze.sample_blks_scanned</code>.
     */
    public void setSampleBlksScanned(Long value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_analyze.sample_blks_scanned</code>.
     */
    public Long getSampleBlksScanned() {
        return (Long) get(6);
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_analyze.ext_stats_total</code>.
     */
    public void setExtStatsTotal(Long value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_analyze.ext_stats_total</code>.
     */
    public Long getExtStatsTotal() {
        return (Long) get(7);
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_analyze.ext_stats_computed</code>.
     */
    public void setExtStatsComputed(Long value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_analyze.ext_stats_computed</code>.
     */
    public Long getExtStatsComputed() {
        return (Long) get(8);
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_analyze.child_tables_total</code>.
     */
    public void setChildTablesTotal(Long value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_analyze.child_tables_total</code>.
     */
    public Long getChildTablesTotal() {
        return (Long) get(9);
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_analyze.child_tables_done</code>.
     */
    public void setChildTablesDone(Long value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_analyze.child_tables_done</code>.
     */
    public Long getChildTablesDone() {
        return (Long) get(10);
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_analyze.current_child_table_relid</code>.
     */
    public void setCurrentChildTableRelid(Long value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_analyze.current_child_table_relid</code>.
     */
    public Long getCurrentChildTableRelid() {
        return (Long) get(11);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgStatProgressAnalyzeRecord
     */
    public PgStatProgressAnalyzeRecord() {
        super(PgStatProgressAnalyze.PG_STAT_PROGRESS_ANALYZE);
    }

    /**
     * Create a detached, initialised PgStatProgressAnalyzeRecord
     */
    public PgStatProgressAnalyzeRecord(Integer pid, Long datid, String datname, Long relid, String phase, Long sampleBlksTotal, Long sampleBlksScanned, Long extStatsTotal, Long extStatsComputed, Long childTablesTotal, Long childTablesDone, Long currentChildTableRelid) {
        super(PgStatProgressAnalyze.PG_STAT_PROGRESS_ANALYZE);

        setPid(pid);
        setDatid(datid);
        setDatname(datname);
        setRelid(relid);
        setPhase(phase);
        setSampleBlksTotal(sampleBlksTotal);
        setSampleBlksScanned(sampleBlksScanned);
        setExtStatsTotal(extStatsTotal);
        setExtStatsComputed(extStatsComputed);
        setChildTablesTotal(childTablesTotal);
        setChildTablesDone(childTablesDone);
        setCurrentChildTableRelid(currentChildTableRelid);
        resetChangedOnNotNull();
    }
}
