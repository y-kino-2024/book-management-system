/*
 * This file is generated by jOOQ.
 */
package quoassignment.jooq.pg_catalog.tables.records;


import java.time.OffsetDateTime;

import org.jooq.impl.TableRecordImpl;

import quoassignment.jooq.pg_catalog.tables.PgReplicationSlots;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgReplicationSlotsRecord extends TableRecordImpl<PgReplicationSlotsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.slot_name</code>.
     */
    public void setSlotName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.slot_name</code>.
     */
    public String getSlotName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.plugin</code>.
     */
    public void setPlugin(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.plugin</code>.
     */
    public String getPlugin() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.slot_type</code>.
     */
    public void setSlotType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.slot_type</code>.
     */
    public String getSlotType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.datoid</code>.
     */
    public void setDatoid(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.datoid</code>.
     */
    public Long getDatoid() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.database</code>.
     */
    public void setDatabase(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.database</code>.
     */
    public String getDatabase() {
        return (String) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.temporary</code>.
     */
    public void setTemporary(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.temporary</code>.
     */
    public Boolean getTemporary() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.active</code>.
     */
    public void setActive(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.active_pid</code>.
     */
    public void setActivePid(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.active_pid</code>.
     */
    public Integer getActivePid() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.xmin</code>.
     */
    public void setXmin(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.xmin</code>.
     */
    public Long getXmin() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.catalog_xmin</code>.
     */
    public void setCatalogXmin(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.catalog_xmin</code>.
     */
    public Long getCatalogXmin() {
        return (Long) get(9);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setRestartLsn(Object value) {
        set(10, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getRestartLsn() {
        return get(10);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setConfirmedFlushLsn(Object value) {
        set(11, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getConfirmedFlushLsn() {
        return get(11);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.wal_status</code>.
     */
    public void setWalStatus(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.wal_status</code>.
     */
    public String getWalStatus() {
        return (String) get(12);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.safe_wal_size</code>.
     */
    public void setSafeWalSize(Long value) {
        set(13, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.safe_wal_size</code>.
     */
    public Long getSafeWalSize() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.two_phase</code>.
     */
    public void setTwoPhase(Boolean value) {
        set(14, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.two_phase</code>.
     */
    public Boolean getTwoPhase() {
        return (Boolean) get(14);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.inactive_since</code>.
     */
    public void setInactiveSince(OffsetDateTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.inactive_since</code>.
     */
    public OffsetDateTime getInactiveSince() {
        return (OffsetDateTime) get(15);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.conflicting</code>.
     */
    public void setConflicting(Boolean value) {
        set(16, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.conflicting</code>.
     */
    public Boolean getConflicting() {
        return (Boolean) get(16);
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_replication_slots.invalidation_reason</code>.
     */
    public void setInvalidationReason(String value) {
        set(17, value);
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_replication_slots.invalidation_reason</code>.
     */
    public String getInvalidationReason() {
        return (String) get(17);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.failover</code>.
     */
    public void setFailover(Boolean value) {
        set(18, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.failover</code>.
     */
    public Boolean getFailover() {
        return (Boolean) get(18);
    }

    /**
     * Setter for <code>pg_catalog.pg_replication_slots.synced</code>.
     */
    public void setSynced(Boolean value) {
        set(19, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_replication_slots.synced</code>.
     */
    public Boolean getSynced() {
        return (Boolean) get(19);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgReplicationSlotsRecord
     */
    public PgReplicationSlotsRecord() {
        super(PgReplicationSlots.PG_REPLICATION_SLOTS);
    }

    /**
     * Create a detached, initialised PgReplicationSlotsRecord
     */
    public PgReplicationSlotsRecord(String slotName, String plugin, String slotType, Long datoid, String database, Boolean temporary, Boolean active, Integer activePid, Long xmin, Long catalogXmin, Object restartLsn, Object confirmedFlushLsn, String walStatus, Long safeWalSize, Boolean twoPhase, OffsetDateTime inactiveSince, Boolean conflicting, String invalidationReason, Boolean failover, Boolean synced) {
        super(PgReplicationSlots.PG_REPLICATION_SLOTS);

        setSlotName(slotName);
        setPlugin(plugin);
        setSlotType(slotType);
        setDatoid(datoid);
        setDatabase(database);
        setTemporary(temporary);
        setActive(active);
        setActivePid(activePid);
        setXmin(xmin);
        setCatalogXmin(catalogXmin);
        setRestartLsn(restartLsn);
        setConfirmedFlushLsn(confirmedFlushLsn);
        setWalStatus(walStatus);
        setSafeWalSize(safeWalSize);
        setTwoPhase(twoPhase);
        setInactiveSince(inactiveSince);
        setConflicting(conflicting);
        setInvalidationReason(invalidationReason);
        setFailover(failover);
        setSynced(synced);
        resetChangedOnNotNull();
    }
}
