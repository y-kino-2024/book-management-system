/*
 * This file is generated by jOOQ.
 */
package quoassignment.jooq.pg_catalog.routines;


import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;

import quoassignment.jooq.pg_catalog.PgCatalog;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JsonbObjectAggUniqueStrict extends AbstractRoutine<JSONB> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter
     * <code>pg_catalog.jsonb_object_agg_unique_strict.RETURN_VALUE</code>.
     */
    public static final Parameter<JSONB> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", SQLDataType.JSONB, false, false);

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static final Parameter<Object> KEY = Internal.createParameter("key", SQLDataType.OTHER, false, false);

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static final Parameter<Object> VALUE = Internal.createParameter("value", SQLDataType.OTHER, false, false);

    /**
     * Create a new routine call instance
     */
    public JsonbObjectAggUniqueStrict() {
        super("jsonb_object_agg_unique_strict", PgCatalog.PG_CATALOG, SQLDataType.JSONB);

        setReturnParameter(RETURN_VALUE);
        addInParameter(KEY);
        addInParameter(VALUE);
    }

    /**
     * Set the <code>key</code> parameter IN value to the routine
     */
    public void setKey(Object value) {
        setValue(KEY, value);
    }

    /**
     * Set the <code>key</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setKey(Field<Object> field) {
        setField(KEY, field);
    }

    /**
     * Set the <code>value</code> parameter IN value to the routine
     */
    public void setValue(Object value) {
        setValue(VALUE, value);
    }

    /**
     * Set the <code>value</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setValue(Field<Object> field) {
        setField(VALUE, field);
    }
}
